/*
정수 N이 입력되면 00시 00분 00초부터 N시 59분 59초까지의 모든 시각 중 3이 하나라도 포함되는 모든 경우의 수를 구하는 프로그램을 작성하시오
예를 들어 1을 입력했을 때 다음은 3이 하나라도 포함되어 있으므로 세어야 하는 시각이다.

00시 00분 03초
00시 13분 30초
00시 30분 00초
...

반면에 다음은 3이 하나도 포함되어 있지 않으므로 세면 안 되는 시각이다.

00시 02분 55초
00시 28분 24초
...

[입력]
시각을 나타내느 정수 N (0<= N <= 23)

[출력]
모든 시각 중에서 3이 하나라도 포함되는 모든 경우의 수

[접근 방법]
단순히 모든 시각의 경우의 수를 하나씩 모두 세면 된다.
그런데 왜?
00시 00분 00초부터 23시 59분 59초까지의 모든 경우의 수는 86,400가지밖에 존재하지 않기 때문,
즉 경우의 수가 1억 이하니까 모든 경우의 수를 확인해도 시간 제한 1초 안에 문제를 해결할 수 있다.

완전 탐색 유형으로 분류되기도 한다.
완전 탐색은 모든 경우를 따져봐야 하므로 보통은 비효율적인 시간 복잡도를 가지고 있을 수 있다.
따라서 입력 데이터의 개수가 큰 경우 정상적으로 동작하지 않을 수 있지만, 이번 문제의 경우에는
총 경우의 수가 86,400가지이므로 충분히 완전 탐색으로도 해결할 수 있다.
*/

function foo(N) {
  let result = 0;

  for (let i = 0; i <= N; i++) {
    i = i.toString();
    for (let j = 0; j < 60; j++) {
      j = j.toString();
      for (let k = 0; k < 60; k++) {
        let str = i + j + k.toString();
        if (str.indexOf("3") !== -1) {
          result++;
        }
      }
    }
  }
  return result;
}

const result = foo(5);
console.log(result);
