/*
숫자 카드 게임은 여러 개의 숫자 카드 중에서 가장 높은 숫자가 쓰인 카드 한 장을 뽑는 게임이다.
룰은 다음과 같다.
1.숫자가 쓰인 카드들이 N * M 형턔로 놓여 있다. 이때 N은 행의 개수를 의미하며, M은 열의 개수를 의미한다.
2.먼저 뽑고자 하는 카드가 포함되어 있는 행을 선택한다.
3.그다음 선택된 행에 포함된 카드들 중 가장 숫자가 낮은 카드를 뽑아야 한다.
4.따라서 처음에 카드를 골라낼 행을 선택할 때, 이후에 해당 행에서 가장 숫자가 낮은 카드를 뽑을 것을 고려하여
  최종적으로 가장 높은 숫자의 카드를 뽑을 수 있도록 전략을 세워야 한다.

예를 들어 다음과 같이 3 * 3 형태로 카드들이 놓여있다고 가정하자.

3 1 2
5 1 5
2 2 2

여기서 카드를 골라낼 행을 고를 때 첫 번째 혹은 두 번째 행을 선택하는 경우, 최종적으로 뽑는 카드는 1이다.
하지만 세 번째 행을 선택하는 경우 최종적으로 뽑는 카드는 2이다.
따라서 이 예에서는 세 번째 행을 선택하여 숫자 2가 쓰여진 카드를 뽑는 것이 정답이다.

[입력]
첫 번째 인수 : 숫자가 적힌 카드들이 놓여있는 2차원 배열
숫자 크기의 범위는 1<= 자연수 <= 10,000
*/

/*
[접근 방법]
1.각 행마다 가장 작은 숫자를 찾는다.
2.이렇게 뽑아낸 숫자들 중에서 가장 큰 수를 찾아낸다.
*/
function foo(matrix){

    let max = 0; //가장 큰 수를 찾기 위한 max 변수
    
    for(let i=0; i<matrix.length; i++){
        let min = Math.min(...matrix[i]); //각 행마다 가장 작은 수를 구한다.
        if(min > max){                    
            max = min;
        }
    }
    return max;
}

let matrix = [
    [3,1,2],
    [4,1,4],
    [2,2,2]
]
let result = foo(matrix);
console.log(result);