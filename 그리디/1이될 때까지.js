/*
어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 수행하려고 한다.
단, 두 번째 연산은 N이 k로 나누어떨어질 때만 선택할 수 있다.

1.N에서 1을 뺀다.
2.N을 K로 나눈다.

예를 들어 N이 17, K가 4라고 가정한다면, 이때 1번의 과정을 한 번 수행하면 N은 16이 된다.
이후에 2번의 과정을 두 번 수행하면 N은 1이 된다.
결과적으로 이 경우 전체 과정을 실행한 횟수는 3이되고, 이는 N을 1로 만드는 최소 횟수이다.

[입력]
첫 번째 인수로 자연수 N(2 <= N <= 100,000)이 주어진다.
두 번째 인수로 자연수 K(2 <= K <= 100,000)이 주어진다.
이때, N >= K를 항상 만족한다.

[출력]
N이 1이 될 때까지 1번 또는 2번 과정을 수행해야 하는 횟수의 최소값
*/

function foo(N, K) {
    let count = 0;

    while (N > 1) {
        if (N % K === 0) {
            N /= K
        }else{
            N -= 1;
        }
        count ++;
    }
    return count;
}

let result = foo(25, 5);
console.log(result);
